// Mocks generated by Mockito 5.4.4 from annotations
// in time_sheet/test/weekend_overtime_migration_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:isar/isar.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:time_sheet/features/pointage/data/data_sources/local.dart'
    as _i3;
import 'package:time_sheet/features/pointage/data/models/generated_pdf/generated_pdf.dart'
    as _i6;
import 'package:time_sheet/features/pointage/data/models/timesheet_entry/timesheet_entry.dart'
    as _i5;
import 'package:time_sheet/features/pointage/domain/entities/timesheet_entry.dart'
    as _i7;
import 'package:time_sheet/services/weekend_detection_service.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeIsar_0 extends _i1.SmartFake implements _i2.Isar {
  _FakeIsar_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LocalDatasourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDatasourceImpl extends _i1.Mock
    implements _i3.LocalDatasourceImpl {
  MockLocalDatasourceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Isar get isar => (super.noSuchMethod(
        Invocation.getter(#isar),
        returnValue: _FakeIsar_0(
          this,
          Invocation.getter(#isar),
        ),
      ) as _i2.Isar);

  @override
  set isar(_i2.Isar? _isar) => super.noSuchMethod(
        Invocation.setter(
          #isar,
          _isar,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<int> saveTimeSheet(_i5.TimeSheetEntryModel? entryModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveTimeSheet,
          [entryModel],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<List<_i5.TimeSheetEntryModel>> getTimesheetEntries() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTimesheetEntries,
          [],
        ),
        returnValue: _i4.Future<List<_i5.TimeSheetEntryModel>>.value(
            <_i5.TimeSheetEntryModel>[]),
      ) as _i4.Future<List<_i5.TimeSheetEntryModel>>);

  @override
  _i4.Future<List<_i5.TimeSheetEntryModel>> getTimesheetEntriesForWeek(
          int? weekNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTimesheetEntriesForWeek,
          [weekNumber],
        ),
        returnValue: _i4.Future<List<_i5.TimeSheetEntryModel>>.value(
            <_i5.TimeSheetEntryModel>[]),
      ) as _i4.Future<List<_i5.TimeSheetEntryModel>>);

  @override
  _i4.Future<List<_i5.TimeSheetEntryModel>> findEntriesFromMonthOf(
    int? monthNumber,
    int? year,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #findEntriesFromMonthOf,
          [
            monthNumber,
            year,
          ],
        ),
        returnValue: _i4.Future<List<_i5.TimeSheetEntryModel>>.value(
            <_i5.TimeSheetEntryModel>[]),
      ) as _i4.Future<List<_i5.TimeSheetEntryModel>>);

  @override
  _i4.Future<void> saveGeneratedPdf(_i6.GeneratedPdfModel? pdf) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveGeneratedPdf,
          [pdf],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i6.GeneratedPdfModel>> getGeneratedPdfs() =>
      (super.noSuchMethod(
        Invocation.method(
          #getGeneratedPdfs,
          [],
        ),
        returnValue: _i4.Future<List<_i6.GeneratedPdfModel>>.value(
            <_i6.GeneratedPdfModel>[]),
      ) as _i4.Future<List<_i6.GeneratedPdfModel>>);

  @override
  _i4.Future<void> deleteGeneratedPdf(int? pdfId) => (super.noSuchMethod(
        Invocation.method(
          #deleteGeneratedPdf,
          [pdfId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i7.TimesheetEntry?> getTimesheetEntryForDate(String? date) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTimesheetEntryForDate,
          [date],
        ),
        returnValue: _i4.Future<_i7.TimesheetEntry?>.value(),
      ) as _i4.Future<_i7.TimesheetEntry?>);

  @override
  _i4.Future<void> deleteTimeSheet(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteTimeSheet,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i5.TimeSheetEntryModel?> getTimesheetEntry(
          String? formattedDate) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTimesheetEntry,
          [formattedDate],
        ),
        returnValue: _i4.Future<_i5.TimeSheetEntryModel?>.value(),
      ) as _i4.Future<_i5.TimeSheetEntryModel?>);

  @override
  _i4.Future<_i5.TimeSheetEntryModel?> getTimesheetEntryWhitFrenchFormat(
          String? formattedDate) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTimesheetEntryWhitFrenchFormat,
          [formattedDate],
        ),
        returnValue: _i4.Future<_i5.TimeSheetEntryModel?>.value(),
      ) as _i4.Future<_i5.TimeSheetEntryModel?>);

  @override
  _i4.Future<int> getVacationDaysCount() => (super.noSuchMethod(
        Invocation.method(
          #getVacationDaysCount,
          [],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<void> createAnomaliesForCurrentMonth() => (super.noSuchMethod(
        Invocation.method(
          #createAnomaliesForCurrentMonth,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<int> getLastYearVacationDaysCount() => (super.noSuchMethod(
        Invocation.method(
          #getLastYearVacationDaysCount,
          [],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<_i5.TimeSheetEntryModel?> getTimesheetEntryById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTimesheetEntryById,
          [id],
        ),
        returnValue: _i4.Future<_i5.TimeSheetEntryModel?>.value(),
      ) as _i4.Future<_i5.TimeSheetEntryModel?>);

  @override
  _i4.Future<void> updateTimesheetEntry(_i5.TimeSheetEntryModel? entry) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTimesheetEntry,
          [entry],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i5.TimeSheetEntryModel>> getTimesheetEntriesForPeriod(
    DateTime? startDate,
    DateTime? endDate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTimesheetEntriesForPeriod,
          [
            startDate,
            endDate,
          ],
        ),
        returnValue: _i4.Future<List<_i5.TimeSheetEntryModel>>.value(
            <_i5.TimeSheetEntryModel>[]),
      ) as _i4.Future<List<_i5.TimeSheetEntryModel>>);
}

/// A class which mocks [WeekendDetectionService].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeekendDetectionService extends _i1.Mock
    implements _i8.WeekendDetectionService {
  MockWeekendDetectionService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool isWeekend(
    DateTime? date, {
    List<int>? customWeekendDays,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #isWeekend,
          [date],
          {#customWeekendDays: customWeekendDays},
        ),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<List<int>> getConfiguredWeekendDays() => (super.noSuchMethod(
        Invocation.method(
          #getConfiguredWeekendDays,
          [],
        ),
        returnValue: _i4.Future<List<int>>.value(<int>[]),
      ) as _i4.Future<List<int>>);

  @override
  _i4.Future<void> updateWeekendConfiguration(List<int>? weekendDays) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateWeekendConfiguration,
          [weekendDays],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<bool> shouldApplyWeekendOvertime(DateTime? date) =>
      (super.noSuchMethod(
        Invocation.method(
          #shouldApplyWeekendOvertime,
          [date],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> isWeekendOvertimeEnabled() => (super.noSuchMethod(
        Invocation.method(
          #isWeekendOvertimeEnabled,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<void> setWeekendOvertimeEnabled(bool? enabled) =>
      (super.noSuchMethod(
        Invocation.method(
          #setWeekendOvertimeEnabled,
          [enabled],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> resetToDefaults() => (super.noSuchMethod(
        Invocation.method(
          #resetToDefaults,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void clearCache() => super.noSuchMethod(
        Invocation.method(
          #clearCache,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
